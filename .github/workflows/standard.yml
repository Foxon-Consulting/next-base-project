name: integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - "**"
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: pre-commit
        uses: Foxon-Consulting/github-actions/integration/common/pre-commit@main

  integration:
    uses: Foxon-Consulting/github-actions/.github/workflows/simple_integration.yml@main

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.18.2"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./out

  test:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.18.2"
      - name: install
        run: npm ci
      - name: test
        run: npm test

  releasing:
    runs-on: ubuntu-latest
    needs:
      - pre-commit
      - integration
    if: github.ref == 'refs/heads/main'
    steps:
      - name: releasing
        uses: Foxon-Consulting/github-actions/delivery/common/release-please@main

  delivery:
    needs:
      - releasing
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      pull-requests: write
    uses: Foxon-Consulting/github-actions/.github/workflows/simple_delivery.yml@main

  deployment:
    needs:
      - releasing
      - delivery
    if: github.ref == 'refs/heads/dev'
    permissions:
      contents: write
      pull-requests: write
    uses: Foxon-Consulting/github-actions/.github/workflows/simple_deployment.yml@main
