name: integration

# env:
#   NODE_VERSION: 18.18.2

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - "**"
    tags:
      - "**"
  release:
    branches:
      # - main
      - "**"
    types:
      - created

jobs:
  # pre-commit:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: pre-commit
  #       uses: Foxon-Consulting/github-actions/integration/common/pre-commit@main

  # integration:
  #   uses: Foxon-Consulting/github-actions/.github/workflows/simple_integration.yml@main

  build:
    runs-on: ubuntu-latest
    container: lizzieb1416/node-image:1.0.0
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build with Next.js
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: next-base-project-artifact
          path: ./out/

  deliver:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: next-base-project-artifact
          path: /tmp/artifact
      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Zip artifact
        run: |
          cd /tmp/artifact
          zip -r next-base-project.zip *
      - name: Push to S3 bucket
        run: |
          aws s3 cp /tmp/artifact/next-base-project.zip s3://foxon-consulting-test/next-base-project.zip

    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v4
    #   # - name: Login to Docker Hub
    #   #   uses: docker/login-action@v3
    #   #   with:
    #   #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #   #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    #   - name: Set up Docker Buildx
    #     uses: docker/setup-buildx-action@v3

    #   - name: Build
    #     uses: docker/build-push-action@v5
    #     with:
    #       context: .
    #       file: ./Dockerfile
    #       push: false
    #       tags: next-deploy-img:temp
    #       outputs: type=local,dest=/tmp/next-deploy-img.tar
    #   - name: Upload artifact
    #     uses: actions/upload-artifact@v3
    #     with:
    #       name: next-deploy-img
    #       path: /tmp/next-deploy-img.tar

    # - name: Build
    #   uses: docker/build-push-action@v5
    #   with:
    #     context: .
    #     file: ./Dockerfile
    #     push: false
    #     tags: next-deploy-img:temp
    #     outputs: type=docker,dest=/tmp/next-deploy-img.tar
    # - name: Upload artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: next-deploy-img
    #     path: /tmp/next-deploy-img.tar

  # test:
  #   runs-on: ubuntu-latest
  #   container: lizzieb1416/node-image:1.0.0
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup Node
  #       uses: actions/setup-node@v3
  #       # with:
  #       #   node-version: "${{ env.NODE_VERSION }}"
  #     - name: install
  #       run: npm ci
  #     - name: test
  #       run: npm test

  # delivery:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   #   if: github.ref == 'refs/heads/main' || github.tag != null
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: next-deploy-img
  #         path: /tmp
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Load image
  #       run: |
  #         docker load --input /tmp/next-deploy-img.tar
  #     # Tag image with git sha if not a tag, with the tag if it is a tag
  #     - name: Tag image
  #       run: |
  #         if [ $GITHUB_REF_TYPE == 'tag' ]; then
  #           docker tag next-deploy-img:temp lizzieb1416/next-deploy-img:${GITHUB_REF_NAME}
  #           docker push lizzieb1416/next-deploy-img:${GITHUB_REF_NAME}
  #         else
  #           docker tag next-deploy-img:temp lizzieb1416/next-deploy-img:${GITHUB_SHA}
  #           docker push lizzieb1416/next-deploy-img:${GITHUB_SHA}
  #         fi

  # releasing:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - pre-commit
  #     - integration
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: releasing
  #       uses: Foxon-Consulting/github-actions/delivery/common/release-please@main

  # delivery:
  #   needs:
  #     - releasing
  #   if: github.ref == 'refs/heads/main'
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #   uses: Foxon-Consulting/github-actions/.github/workflows/simple_delivery.yml@main

  # deployment:
  #   needs:
  #     - releasing
  #     - delivery
  #   if: github.ref == 'refs/heads/dev'
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #   uses: Foxon-Consulting/github-actions/.github/workflows/simple_deployment.yml@main
